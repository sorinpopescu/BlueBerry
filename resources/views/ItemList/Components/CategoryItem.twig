{{ component( "Ceres::Basket.Components.AddToBasket" ) }}
{{ component( "Ceres::ItemList.Components.CategoryImageCarousel") }}
{{ component( "Ceres::ItemList.Components.ItemStoreSpecial" ) }}

{% import "Ceres::Basket.Macros.AddToBasket" as AddToBasket %}

{% if enableCarousel is not defined %}
    {% if config("Ceres.item.enable_image_carousel") == "true" %}
        {% set enableCarousel = "true" %}
    {% else %}
        {% set enableCarousel = "false" %}
    {% endif %}
{% endif %}

<script type="x/template" id="vue-category-item">
    <article class="cmp cmp-product-thumb cmp-product-thumb--grid">
        <div class="thumb-inner" :class="paddingClasses" :style="paddingInlineStyles">

            {{ AddToBasket.printVueComponent( "item", true, false, { ":has-price": "item | hasItemDefaultPrice" } ) }}

            <div class="thumb-background"></div>

            <div class="thumb-image">
                <div class="square-container">
                    <div class="square-inner main-image">
                        <slot name="item-image">
                            <category-image-carousel template="#vue-category-image-carousel"
                                                    :image-urls-data="item.images | itemImages(imageUrlAccessor)"
                                                    :alt-text="item | itemName"
                                                    :title-text="item | itemName"
                                                    :item-url="item | itemURL"
                                                    :enable-carousel="{{ enableCarousel }}"
                                                    :disable-carousel-on-mobile="disableCarouselOnMobile"
                                                    ref="categoryImageCarousel">
                            </category-image-carousel>
                        </slot>
                    </div>
                </div>
            </div>

            <!-- STORE SPECIALS -->
            <div class="special-tags">
				<span v-for="tag in itemData.tags">
  					<span class="badge badge-offer badge-danger" v-if="tag.names.name == 'Angebot' && itemData.prices.rrp.price.value != 0 ">-${    (100 - ( itemData.prices.default.price.value) / (itemData.prices.rrp.price.value) * 100).toFixed(0) } %</span>
  					<span class="badge badge-new badge-primary" v-if="tag.names.name == 'Neu'">${ tag.names.name }</span>
				</span>
	        </div>
            <!-- ./STORE SPECIALS -->

            <!-- ITEM DETAILS -->
            <slot name="item-details">
                <div class="thumb-content">
                    <a :href="item | itemURL" class="thumb-title small">
                        ${ item | itemName }<!--
                        --><span v-for="attribute in item.groupedAttributes">${ "Ceres::Template.itemGroupedAttribute" | translate(attribute) }</span>
                    </a>
                    <div class="thumb-meta">
                        <slot name="before-prices"></slot>

                        <div class="prices">
                            <div v-if="item.prices.rrp && item.prices.rrp.data.basePrice > 0 && item.prices.rrp.data.basePrice > item.prices.default.unitPrice.value" class="price-view-port">
                                <del class="crossprice" v-if="item.prices.specialOffer">
                                    ${ item.prices.default.unitPrice.formatted | itemCrossPrice(true) }
                                </del>
                                <del class="crossprice" v-else>
                                    <span v-if="item.texts.lang === 'en'">RRP ${ item.prices.rrp.data.basePrice | currency(item.prices.rrp.currency ) }</span>
                                    <span v-if="item.texts.lang === 'de'">UVP ${ item.prices.rrp.data.basePrice | currency(item.prices.rrp.currency ) }</span>
                                </del>
                            </div>

                            <div class="price">
                                ${ item.prices.default.unitPrice.value | currency(item.prices.default.currency) }*
                            </div>
                        </div>
                    </div>

                    <slot name="after-prices"></slot>

                    <div class="category-unit-price" v-if="!(item.unit.unitOfMeasurement === 'C62' && item.unit.content === 1)">
                        <span>${ item.unit.content }</span>
                        <span>&nbsp;${ item.unit.names.name }</span>
                        <span v-if="item.variation.mayShowUnitPrice">&nbsp;| ${ item.prices.default.basePrice }</span>
                    </div>

                    {{ AddToBasket.printVueComponent( "item", false, false, { ":has-price": "item | hasItemDefaultPrice" } ) }}

                    <span class="vat small text-muted">
                        <span v-if="item.texts.lang === 'en'">Available: ${ item.stock.net }</span>
                        <span v-if="item.texts.lang === 'de'">Verf√ºgbar: ${ item.stock.net }</span>
                    </span>


                </div>
            </slot>
            <!-- ./ITEM DETAILS  -->
        </div>
    </article>
</script>